- name: ensure locale is set to {{ config_system_locale }}
  import_tasks: locale.yml

- name: copy sources.list
  copy:
    src: ./sources.list
    dest: /etc/apt/sources.list
    owner: 'root'
    group: 'root'
    mode: 0644
    force: yes
  when: overwrite_apt_sources is true

- name: copy package preferences
  copy:
    src: ./preferences
    dest: /etc/apt/preferences
    owner: 'root'
    group: 'root'
    mode: 0644
    force: yes


- name: install packages
  apt: 
    update_cache: yes
    pkg:
      - git
      - ssh
      - sudo
      - curl
      - wget
      - python3
      - python3-pip
      - zsh
      - luarocks
      - build-essential
      - cmake
      - ripgrep
      - fd-find
      - htop
      - psmisc
      - fuse
      - pinentry-curses
      - pinentry-tty

- name: check if device is laptop
  shell:
    cmd: 'dmidecode | grep Version'
  changed_when: false
  register: dmidecode_version

- name: install laptop specific packages
  apt:
    update_cache: no
    pkg:
      - firmware-iwlwifi
      - firmware-realtek
      - network-manager
      - acpi
  when: >
    (dmidecode_version.stdout is search('ThinkPad'))

- name: set zsh to be the default shell
  user:
    name: "{{username}}"
    shell: /usr/bin/zsh

- name: get dotfiles
  become_user: '{{username}}'
  git:
    repo: git@github.com:rolandwarburton/dotfiles.git
    dest: /home/{{username}}/dotfiles
    accept_hostkey: yes
    key_file: /home/{{username}}/.ssh/id_github # on the remote host
    version: 'wayland'

- name: download casa file release
  get_url:
    url: https://github.com/RolandWarburton/casa/releases/download/v0.0.1/casa.zip
    dest: /tmp/casa.zip

- name: unzip casa release
  unarchive:
    src: /tmp/casa.zip
    dest: '/home/{{username}}/.local/bin/casa'
    remote_src: yes
    group: '{{username}}'
    owner: '{{username}}'
    mode: '0755'

- name: run casa
  become_user: '{{username}}'
  shell:
    cmd: /home/{{username}}/.local/bin/casa -c /home/{{username}}/dotfiles/install.conf.yaml
    chdir: /home/{{username}}/dotfiles
  register: casa_output
  failed_when: not casa_output.rc != 0
  changed_when: not casa_output.stdout is search('[LINK] Created symlink:')

- name: test starship binary exists
  stat:
    path: /usr/local/bin/starship
  register: test_starship_binary

- name: ensure usr local bin is created
  file:
    path: /usr/local/bin
    state: directory
    mode: '0755'

- name: install starship
  unarchive:
    src: https://github.com/starship/starship/releases/download/v1.11.0/starship-x86_64-unknown-linux-gnu.tar.gz
    dest: /usr/local/bin
    remote_src: yes
  when: not test_starship_binary.stat.exists

# enable pcspkr device for roland
# allows access to /dev/input/by-path/platform-pcspkr-event-spkr
- name: add '{{username}}' to group realtime
  user:
    name: '{{username}}'
    groups: input
    append: yes

# copy over the gpg config file
- name: ensure gnupg dir created in home directory
  file:
    path: '/home/{{username}}/.gnupg'
    state: directory
    mode: '0755'
    owner: '{{username}}'
    group: '{{username}}'

- name: copy gpg-agent.conf to gnupg directory
  copy:
    src: ./gpg-agent.conf
    dest: '/home/{{username}}/.gnupg/gpg-agent.conf'
    owner: 'root'
    group: 'root'
    mode: 0644
    force: yes
