# get node version
- name: Check if .nvmrc exists
  stat:
    path: '/home/{{username}}/.nvmrc'
  register: nvmrc_stat

- name: Fail if .nvmrc not found
  fail:
    msg: '.nvmrc file not found in /home/{{username}}/.nvmrc'
  when: not nvmrc_stat.stat.exists

- name: Read .nvmrc contents
  slurp:
    src: '/home/{{username}}/.nvmrc'
  register: nvmrc_contents

- name: Set node_version variable
  set_fact:
    node_version: "{{ nvmrc_contents.content | b64decode | trim }}"

- name: Print node version
  debug:
    msg: "Node version to install: {{ node_version }}"

# typescript
- name: install typescript package
  become_user: '{{username}}'
  community.general.npm:
    name: typescript
    global: yes
    executable: /home/{{username}}/.config/nvm/versions/node/v{{node_version}}/bin/npm
    state: present

- name: install typescript-language-server package
  become_user: '{{username}}'
  community.general.npm:
    name: typescript-language-server
    global: yes
    executable: /home/{{username}}/.config/nvm/versions/node/v{{node_version}}/bin/npm
    state: present

- name: install eslint package
  become_user: '{{username}}'
  community.general.npm:
    name: eslint
    global: yes
    executable: /home/{{username}}/.config/nvm/versions/node/v{{node_version}}/bin/npm
    state: present

- name: install prettier package
  become_user: '{{username}}'
  community.general.npm:
    name: 'prettier'
    global: yes
    executable: /home/{{username}}/.config/nvm/versions/node/v{{node_version}}/bin/npm
    state: present

- name: install prettierd package
  become_user: '{{username}}'
  community.general.npm:
    name: '@fsouza/prettierd'
    global: yes
    executable: /home/{{username}}/.config/nvm/versions/node/v{{node_version}}/bin/npm
    state: present
