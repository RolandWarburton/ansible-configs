- name: install packages
  apt: 
    update_cache: yes
    pkg:
      - alsa-utils
      - pulseaudio
      - pulseaudio-utils
      - libasound2-dev
      - libdbus-1-dev

- name: Ensure group "pipewire" exists
  group:
    name: pipewire
    state: present

- name: Ensure group "realtime" exists
  group:
    name: realtime
    state: present

- name: add '{{username}}' to group pipewire
  user:
    name: '{{username}}'
    groups: pipewire
    append: yes

- name: add '{{username}}' to group realtime
  user:
    name: '{{username}}'
    groups: realtime
    append: yes


# ensure build dir is created
- name: ensure build dir created
  file:
    path: '{{tmp_dir}}'
    state: directory
    mode: '0755'
    owner: '{{username}}'
    group: '{{username}}'


# pipewire download & extract
- name: Check if Pipewire source exists
  stat:
    path: "{{ tmp_dir }}/pipewire-0.3.80.zip"
  register: pipewire_src

- name: download Pipewire Zip File
  get_url:
    url: "https://gitlab.freedesktop.org/pipewire/pipewire/-/archive/0.3.80/pipewire-0.3.80.zip"
    dest: "{{ tmp_dir }}/pipewire-0.3.80.zip"
  when: not pipewire_src.stat.exists

- name: Extract Pipewire Zip File
  unarchive:
    src: "{{ tmp_dir }}/pipewire-0.3.80.zip"
    dest: "{{ tmp_dir }}"
    owner: '{{username}}'
    group: '{{username}}'
    remote_src: yes

# wireplumber download & extract
- name: Check if wireplumber source exists
  stat:
    path: "{{ tmp_dir }}/wireplumber-0.4.14.zip"
  register: wireplumber_src

- name: download Pipewire Zip File
  get_url:
    url: "https://gitlab.freedesktop.org/pipewire/wireplumber/-/archive/0.4.14/wireplumber-0.4.14.zip"
    dest: "{{ tmp_dir }}/wireplumber-0.4.14.zip"
  when: not wireplumber_src.stat.exists

- name: Extract wireplumber Zip File
  unarchive:
    src: "{{ tmp_dir }}/wireplumber-0.4.14.zip"
    dest: "{{ tmp_dir }}"
    owner: '{{username}}'
    group: '{{username}}'
    remote_src: yes

# pipewire build
- name: Check if wireplumber source exists
  stat:
    path: "/usr/bin/pipewire"
  register: pipewire_bin

- name: Build Pipewire (configure)
  become_user: '{{ username }}'
  shell:
    cmd: 'meson setup builddir'
    chdir: '{{ tmp_dir }}/pipewire-0.3.80'
  when: not pipewire_bin.stat.exists

- name: Build Pipewire (configure)
  become_user: '{{ username }}'
  shell:
    cmd: 'meson configure builddir -Dprefix=/usr'
    chdir: '{{ tmp_dir }}/pipewire-0.3.80'
  when: not pipewire_bin.stat.exists

- name: Build Pipewire (install)
  shell:
    cmd: 'meson install -C builddir'
    chdir: '{{ tmp_dir }}/pipewire-0.3.80'
  when: not pipewire_bin.stat.exists

# wireplumber build
- name: Check if wireplumber source exists
  stat:
    path: "/usr/bin/wireplumber"
  register: wireplumber_bin

- name: build wireplumber (configure)
  become_user: '{{username}}'
  shell:
    cmd: 'meson setup --prefix=/usr build'
    chdir: '{{tmp_dir}}/wireplumber-0.4.14'
  register: wireplumber_bin

- name: build wireplumber (configure)
  become_user: '{{username}}'
  shell:
    cmd: 'meson compile -C build'
    chdir: '{{tmp_dir}}/wireplumber-0.4.14'
  register: wireplumber_bin

- name: build wireplumber (install)
  shell:
    cmd: 'ninja -C build install'
    chdir: '{{tmp_dir}}/wireplumber-0.4.14'
  register: wireplumber_bin
