- name: check go is installed
  become_user: '{{username}}'
  shell: 'zsh -c "source ~/.zshrc; command -v go"'
  register: go_command_check
  changed_when: false
  failed_when: false

- name: remove old go install
  become_user: '{{username}}'
  file:
    path: /home/{{username}}/.local/go
    state: absent
  when: go_command_check.rc != 0

- name: debug current architecture
  debug:
    msg: "{{ansible_architecture}}"

- name: Define golang download URLs
  set_fact:
    golang_urls:
      x86_64: "https://go.dev/dl/go1.22.0.linux-amd64.tar.gz"
      aarch64: "https://go.dev/dl/go1.23.3.linux-arm64.tar.gz"

- name: Set golang URL
  set_fact:
    golang_url: "{{ golang_urls.get(ansible_architecture, '') }}"

- name: Fail if architecture is unsupported
  fail:
    msg: "Unsupported architecture: {{ ansible_architecture }}"
  when: golang_url == ''

- name: download and untar go binary
  become_user: '{{username}}'
  unarchive:
    src: "{{golang_url}}"
    dest: /home/{{username}}/.local
    remote_src: yes
    creates: /home/{{username}}/.local/go/bin/go

- name: check go is installed
  become_user: '{{username}}'
  shell: 'zsh -c "source ~/.zshrc; command -v go"'
  register: go_command_check
  changed_when: false
  failed_when: go_command_check.rc != 0

- name: install golang packages
  import_tasks: packages.yml
