# clone dotfiles
- name: check if dotfiles directory exists
  stat:
    path: /home/{{username}}/dotfiles
  register: dotfiles_stat

- name: get dotfiles
  become_user: '{{username}}'
  git:
    repo: git@github.com:rolandwarburton/dotfiles.git
    dest: /home/{{username}}/dotfiles
    accept_hostkey: yes
    key_file: /home/{{username}}/.ssh/id_github # on the remote host
    version: 'wayland'
  when: not dotfiles_stat.stat.exists

- name: Update git submodules
  become_user: '{{ username }}'
  command: git submodule update --init --recursive
  args:
    chdir: '/home/{{ username }}/dotfiles'
  environment:
    GIT_SSH_COMMAND: "ssh -i /home/{{ username }}/.ssh/id_github -o StrictHostKeyChecking=no"
  register: submodule_update_result
  changed_when: >
    'updating' in submodule_update_result.stdout or
    'Cloning into' in submodule_update_result.stdout

- name: Debug output of submodule update
  debug:
    msg: "Submodules updated successfully"
  when: submodule_update_result.rc == 0

# download casa
- name: check if casa is installed
  become_user: '{{username}}'
  shell: 'zsh -c "source ~/.zshrc; command -v casa"'
  register: casa_command
  changed_when: false
  failed_when: false

- block:
    - name: Check if casa binary exists
      become_user: '{{username}}'
      shell: 'zsh -c "source ~/.zshrc; command -v casa"'
      register: casa_bin
      changed_when: false
      failed_when: false

    - name: download casa file release
      get_url:
        url: 'https://github.com/RolandWarburton/casa/releases/download/v0.0.1/casa'
        dest: /usr/local/bin/casa
        group: 'root'
        owner: 'root'
        mode: '0755'
      when: casa_bin.rc != 0
  when: casa_command.rc != 0

- name: run casa
  become_user: '{{username}}'
  shell:
    cmd: casa -c /home/{{username}}/dotfiles/install.conf.yaml
    chdir: /home/{{username}}/dotfiles
  register: casa_output
  failed_when: casa_output.rc != 0
  changed_when: false
